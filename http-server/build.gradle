buildscript {
	repositories {
		mavenCentral()
		mavenLocal()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE"
		classpath "io.codearte.accurest:accurest-gradle-plugin:${findProperty('accurestVersion') ?: accurestVersion}"
	}
}

group = 'io.codearte.accurest.testprojects'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
	mavenLocal()
}

apply plugin: 'groovy'
apply plugin: 'spring-boot'
apply plugin: 'accurest'
apply plugin: 'maven-publish'

ext {
	stubsOutputDirRoot = file("${project.buildDir}/production/${project.name}-stubs/")
	wireMockStubsOutputDir = file(new File(stubsOutputDirRoot, 'mappings/'))
}

accurest {
	targetFramework = 'Spock'
	baseClassForTests = 'com.toomuchcoding.MvcSpec'
	contractsDslDir = file("src/test/resources/accurest")
	stubsOutputDir = wireMockStubsOutputDir
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web") {
		exclude module: "spring-boot-starter-tomcat"
	}
	compile("org.springframework.boot:spring-boot-starter-jetty")
	compile("org.springframework.boot:spring-boot-starter-actuator")

	testRuntime "org.spockframework:spock-spring"
	testCompile "org.spockframework:spock-core"
	testCompile "org.springframework:spring-test"
	testCompile "com.jayway.restassured:spring-mock-mvc:2.9.0"
	testCompile "junit:junit"
}

task stubsJar(type: Jar, dependsOn: "generateWireMockClientStubs") {
	baseName = "${project.name}"
	classifier = "stubs"
	from stubsOutputDirRoot
}

artifacts {
	archives stubsJar
}

publishing {
	publications {
		stubs(MavenPublication) {
			artifactId "${project.name}"
			artifact stubsJar
		}
	}
}

test {
	testLogging {
		exceptionFormat = 'full'
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}
